name: CI

on:
  workflow_call:
    inputs:
      helmVersion:
        required: false
        type: string
        default: '3.11.3'
      helmBuildAndPushDisabled:
        required: false
        type: boolean
        default: false
      helmChartPath:
        required: false
        type: string
        default: './chart'
      version:
        required: true
        type: string
      dockerBuildPlatforms:
        required: false
        type: string
        default: 'linux/amd64,linux/arm64'
      dockerBuildAndPushDisabled:
        required: false
        type: boolean
        default: false
      dockerPushDisabled:
        required: false
        type: boolean
        default: false
      updateUmbrellaChartDisabled:
        type: boolean
        required: false
        default: false
      umbrellaChartName:
        required: false
        type: string

env:
  HELM_EXPERIMENTAL_OCI: 1

jobs:
  docker_build_push:
    if: ${{ inputs.dockerBuildAndPushDisabled == false }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          push: ${{ inputs.dockerPushDisabled == false && ((github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch')) }}
          context: .
          platforms: ${{ inputs.dockerBuildPlatforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ghcr.io/mars-office/${{ github.event.repository.name }}:latest,ghcr.io/mars-office/${{ github.event.repository.name }}:v${{ inputs.version }}
          build-args: |
            DEPLOYABLE_VERSION=${{ inputs.version }}
            GH_TOKEN=${{secrets.GH_TOKEN}}

  helm_build_push:
    outputs:
      chartName: ${{ steps.getChartName.outputs.name }}
    runs-on: ubuntu-latest
    if: ${{ inputs.helmBuildAndPushDisabled == false }}
    steps:
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '${{ inputs.helmVersion }}'
          token: ${{ secrets.GH_TOKEN }}
        id: install

      - name: Checkout
        uses: actions/checkout@v3

      - name: Get chart name
        id: getChartName
        working-directory: ${{inputs.helmChartPath}}
        run: |
            echo "name=$(yq '.name' Chart.yaml)" >> "$GITHUB_OUTPUT"

      - name: Registry Login
        id: login
        run: |
          echo ${{ secrets.GH_TOKEN }} | helm registry login ghcr.io --username ${{ github.repository_owner }} --password-stdin

      - name: Update Chart Dependencies
        run: helm dependency update
        id: update
        working-directory: ${{ inputs.helmChartPath }}

      - name: Lint Chart
        run: helm lint .
        working-directory: ${{ inputs.helmChartPath }}
        id: lint

      - name: Dry Template Chart
        run: helm template .
        working-directory: ${{ inputs.helmChartPath }}
        id: template

      - name: Package Chart
        run: helm package --version ${{ inputs.version }} --app-version v${{ inputs.version }} .
        id: package
        working-directory: ${{ inputs.helmChartPath }}
      
      - name: Helm Push
        id: push
        if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch') }}
        run: |
          helm push ${{ inputs.helmChartPath }}/*.tgz oci://ghcr.io/${{ github.repository_owner }}

  update_umbrella_chart:
    concurrency: ${{ inputs.umbrellaChartName }}
    if: ${{ inputs.updateUmbrellaChartDisabled == false && inputs.helmBuildAndPushDisabled == false && ((github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch')) }}
    needs: [helm_build_push, docker_build_push]
    runs-on: ubuntu-latest
    steps:
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '${{ inputs.helmVersion }}'
          token: ${{ secrets.GH_TOKEN }}
        id: install

      - name: Checkout umbrella
        uses: actions/checkout@v3
        with:
          repository: 'mars-office/${{inputs.umbrellaChartName}}'
          ref: 'main'
          token: ${{ secrets.GH_TOKEN }}
          path: 'umbrella'

      - name: Checkout self
        uses: actions/checkout@v3
        with:
          path: 'subchart'
      
      - name: Set chart name variable
        working-directory: subchart/${{ inputs.helmChartPath }}
        run: |
            echo "CHART_NAME=$(yq '.name' Chart.yaml)" >> $GITHUB_ENV

      - name: Replace version for subchart
        working-directory: umbrella
        run: |
            newver="${{ inputs.version }}" yq -i '(.dependencies[] | select (.name == strenv(CHART_NAME))).version = strenv(newver)' ./Chart.yaml

      - name: Registry Login
        id: login
        run: |
          echo ${{ secrets.GH_TOKEN }} | helm registry login ghcr.io --username ${{ github.repository_owner }} --password-stdin

      - name: Update Chart Dependencies
        working-directory: umbrella
        run: helm dependency update
        id: update

      - name: Push changes to umbrella chart repo
        continue-on-error: true
        working-directory: umbrella
        run: |
            git config user.name "GitHub Actions Bot"
            git config user.email "actions@github.com"
            git commit -m "Bumped version for subchart: $CHART_NAME to ${{ inputs.version }}" .
            git push origin main