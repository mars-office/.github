name: CI

on:
  workflow_call:
    inputs:
      dockerfilePath:
        required: false
        type: string
        default: '.'
      helmBuildAndPushDisabled:
        required: false
        type: boolean
        default: false
      helmChartPath:
        required: false
        type: string
        default: './chart'
      version:
        required: true
        type: string
      dockerBuildPlatforms:
        required: false
        type: string
        default: 'linux/amd64,linux/arm64'
      dockerBuildAndPushDisabled:
        required: false
        type: boolean
        default: false
      dockerPushDisabled:
        required: false
        type: boolean
        default: false
      updateUmbrellaChartDisabled:
        type: boolean
        required: false
        default: false
      umbrellaChartName:
        required: false
        type: string
      codeScanDisabled:
        type: boolean
        required: false
        default: false
      dockerScanDisabled:
        type: boolean
        required: false
        default: false
      helmScanDisabled:
        type: boolean
        required: false
        default: false
      nameOverride:
        type: string
        required: false
        default: ''

env:
  HELM_EXPERIMENTAL_OCI: 1

jobs:
  code_scan:
    permissions:
      security-events: write
      actions: read
      contents: read
      packages: write
      id-token: write
    if: ${{ inputs.codeScanDisabled == false }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
        uses: aquasecurity/trivy-action@master
        continue-on-error: true
        with:
          scan-type: 'fs'
          format: 'github'
          output: 'dependency-results.sbom.json'
          image-ref: '.'
          scan-ref: '.'
          github-pat: ${{ secrets.GH_TOKEN }}

      - name: Run Trivy vulnerability scanner in code mode
        uses: aquasecurity/trivy-action@master
        id: code_scan
        continue-on-error: true
        with:
          scan-type: 'fs'
          scanners: 'vuln,secret,config'
          scan-ref: .
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          skip-dirs: ${{inputs.helmChartPath}}
          skip-files: 'Dockerfile'

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ ((github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main') }}
        continue-on-error: true
        with:
          sarif_file: trivy-results.sarif

      - name: Upload sarif to New Relic
        if: ${{ ((github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main') }}
        continue-on-error: true
        run: |
          curl --location --request POST 'https://security-api.service.eu.newrelic.com/security/v1?repository=https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}' \
          --header 'Api-Key: ${{ secrets.NEW_RELIC_KEY }}' \
          --header 'Content-Type: application/json' \
          --header 'X-Scanner: Trivy' \
          -d @trivy-results.sarif

      # - name: Fail job if scan failed
      #   if: ${{ steps.code_scan.outcome == 'failure' }}
      #   run: exit 1

  docker_build_push:
    permissions:
      id-token: write
      security-events: write
      actions: read
      contents: read
      packages: write
    if: ${{ inputs.dockerBuildAndPushDisabled == false }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          cleanup: false

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}

      - name: GitHub Actions Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          push: ${{ inputs.dockerPushDisabled == false }}
          context: ${{ inputs.dockerfilePath }}
          platforms: ${{ inputs.dockerBuildPlatforms }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          tags: ghcr.io/mars-office/${{ inputs.nameOverride == '' && github.event.repository.name || inputs.nameOverride }}:latest,ghcr.io/mars-office/${{ inputs.nameOverride == '' && github.event.repository.name || inputs.nameOverride }}:v${{ inputs.version }}
          build-args: |
            DEPLOYABLE_VERSION=${{ inputs.version }}
            GH_TOKEN=${{secrets.GH_TOKEN}}


        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Run Trivy vulnerability scanner in image mode
        uses: aquasecurity/trivy-action@master
        if: ${{ inputs.dockerScanDisabled == false }}
        id: docker_scan
        continue-on-error: true
        env:
          TRIVY_USERNAME: mars-office
          TRIVY_PASSWORD: ${{secrets.GH_TOKEN}}
        with:
          scan-type: 'image'
          scanners: 'vuln,secret,config'
          image-ref: ghcr.io/mars-office/${{ inputs.nameOverride == '' && github.event.repository.name || inputs.nameOverride }}:v${{ inputs.version }}
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Upload result to GitHub Code Scanning
        if: ${{ inputs.dockerScanDisabled == false && ((github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main') }}
        uses: github/codeql-action/upload-sarif@v3
        continue-on-error: true
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload sarif to New Relic
        if: ${{ inputs.dockerScanDisabled == false && ((github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main') }}
        continue-on-error: true
        run: |
          curl --location --request POST 'https://security-api.service.eu.newrelic.com/security/v1?repository=https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}' \
          --header 'Api-Key: ${{ secrets.NEW_RELIC_KEY }}' \
          --header 'Content-Type: application/json' \
          --header 'X-Scanner: Trivy' \
          -d @trivy-results.sarif

      # - name: Fail job if scan failed
      #   if: ${{ inputs.dockerScanDisabled == false && steps.docker_scan.outcome == 'failure' }}
      #   run: exit 1
      
  helm_build_push:
    permissions:
      id-token: write
      security-events: write
      actions: read
      contents: read
      packages: write
    outputs:
      chartName: ${{ steps.getChartName.outputs.name }}
    runs-on: ubuntu-latest
    if: ${{ inputs.helmBuildAndPushDisabled == false }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get chart name
        id: getChartName
        working-directory: ${{inputs.helmChartPath}}
        run: |
            echo "name=$(yq '.name' Chart.yaml)" >> "$GITHUB_OUTPUT"

      - name: Registry Login
        id: login
        run: |
          echo ${{ secrets.GH_TOKEN }} | helm registry login ghcr.io --username ${{ github.repository_owner }} --password-stdin
          
      - name: Cache dependencies
        id: cachedeps
        continue-on-error: true
        uses: actions/cache@v4
        with:
          path: ${{ inputs.helmChartPath }}/charts
          key: helm-${{ steps.getChartName.outputs.name }}-${{hashFiles(format('{0}/Chart.lock', inputs.helmChartPath))}}
          restore-keys: helm-${{ steps.getChartName.outputs.name }}-${{hashFiles(format('{0}/Chart.lock', inputs.helmChartPath))}}

      - name: Build Chart Dependencies
        run: helm dependency update
        if: steps.cachedeps.outputs.cache-hit != 'true'
        continue-on-error: true
        id: update
        working-directory: ${{ inputs.helmChartPath }}

      - name: Lint Chart
        run: helm lint .
        working-directory: ${{ inputs.helmChartPath }}
        id: lint

      - name: Run Trivy vulnerability scanner in IaC mode
        if: ${{ inputs.helmScanDisabled == false }}
        uses: aquasecurity/trivy-action@master
        id: helm_scan
        continue-on-error: true
        with:
          scan-type: 'config'
          scan-ref: ${{ inputs.helmChartPath }}
          hide-progress: false
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
          skip-dirs: 'charts'

      - name: Upload result to GitHub Code Scanning
        if: ${{ inputs.helmScanDisabled == false && ((github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main') }}
        continue-on-error: true
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload sarif to New Relic
        if: ${{ inputs.helmScanDisabled == false && ((github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main') }}
        continue-on-error: true
        run: |
          curl --location --request POST 'https://security-api.service.eu.newrelic.com/security/v1?repository=https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}' \
          --header 'Api-Key: ${{ secrets.NEW_RELIC_KEY }}' \
          --header 'Content-Type: application/json' \
          --header 'X-Scanner: Trivy' \
          -d @trivy-results.sarif

      # - name: Fail job if scan failed
      #   if: ${{ inputs.helmScanDisabled == false && steps.helm_scan.outcome == 'failure' }}
      #   run: exit 1

      - name: Package Chart
        run: helm package --version ${{ inputs.version }} --app-version v${{ inputs.version }} .
        id: package
        working-directory: ${{ inputs.helmChartPath }}
      
      - name: Helm Push
        id: push
        if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main' }}
        run: |
          helm push ${{ inputs.helmChartPath }}/*.tgz oci://ghcr.io/${{ github.repository_owner }}

  update_umbrella_chart:
    permissions:
      id-token: write
      security-events: write
      actions: read
      contents: read
      packages: write
    concurrency: ${{ inputs.umbrellaChartName }}
    if: ${{ inputs.updateUmbrellaChartDisabled == false && inputs.helmBuildAndPushDisabled == false && ((github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main') }}
    needs: [helm_build_push, docker_build_push, code_scan]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout umbrella
        uses: actions/checkout@v4
        with:
          repository: 'mars-office/${{inputs.umbrellaChartName}}'
          ref: 'main'
          token: ${{ secrets.GH_TOKEN }}
          path: 'umbrella'

      - name: Checkout self
        uses: actions/checkout@v4
        with:
          path: 'subchart'
      
      - name: Set chart name variable
        working-directory: subchart/${{ inputs.helmChartPath }}
        run: |
            echo "CHART_NAME=$(yq '.name' Chart.yaml)" >> $GITHUB_ENV

      - name: Replace version for subchart
        working-directory: umbrella
        run: |
            newver="${{ inputs.version }}" yq -i '(.dependencies[] | select (.name == strenv(CHART_NAME))).version = strenv(newver)' ./Chart.yaml

      - name: Registry Login
        id: login
        run: |
          echo ${{ secrets.GH_TOKEN }} | helm registry login ghcr.io --username ${{ github.repository_owner }} --password-stdin

      - name: Update Chart Dependencies
        working-directory: umbrella
        run: helm dependency update
        id: update

      - name: Push changes to umbrella chart repo
        continue-on-error: true
        working-directory: umbrella
        run: |
            git config user.name "GitHub Actions Bot"
            git config user.email "actions@github.com"
            git commit -m "Bumped version for subchart: $CHART_NAME to ${{ inputs.version }}" .
            git push origin main
