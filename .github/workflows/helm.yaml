name: Helm build and push

on:
  workflow_call:
    inputs:
      helmVersion:
        required: false
        type: string
        default: '3.11.3'
      workingDirectory:
        required: false
        type: string
        default: '.'
      version:
        required: true
        type: string
      umbrellaChartName:
        required: false
        type: string
        default: ''

env:
  HELM_EXPERIMENTAL_OCI: 1

jobs:
  helm_build_push:
    outputs:
      chartName: ${{ steps.getChartName.outputs.name }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '${{ inputs.helmVersion }}'
          token: ${{ secrets.GH_TOKEN }}
        id: install

      - name: Checkout
        uses: actions/checkout@v3

      - name: Get chart name
        id: getChartName
        working-directory: ${{inputs.workingDirectory}}
        run: |
            echo "name=$(yq '.name' Chart.yaml)" >> "$GITHUB_OUTPUT"

      - name: Registry Login
        id: login
        run: |
          echo ${{ secrets.GH_TOKEN }} | helm registry login ghcr.io --username ${{ github.repository_owner }} --password-stdin

      - name: Update Chart Dependencies
        run: helm dependency update
        id: update
        working-directory: ${{ inputs.workingDirectory }}

      - name: Lint Chart
        run: helm lint .
        working-directory: ${{ inputs.workingDirectory }}
        id: lint

      - name: Dry Template Chart
        run: helm template .
        working-directory: ${{ inputs.workingDirectory }}
        id: template

      - name: Package Chart
        run: helm package --version ${{ inputs.version }} --app-version v${{ inputs.version }} .
        id: package
        working-directory: ${{ inputs.workingDirectory }}
      
      - name: Helm Push
        id: push
        if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch') }}
        run: |
          helm push ${{ inputs.workingDirectory }}/*.tgz oci://ghcr.io/${{ github.repository_owner }}

  update_umbrella_chart:
    runs-on: ubuntu-latest
    needs: [helm_build_push]
    if: ${{ inputs.umbrellaChartName != '' }}
    steps:
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: '${{ inputs.helmVersion }}'
          token: ${{ secrets.GH_TOKEN }}
        id: install

      - name: Checkout umbrella
        uses: actions/checkout@v3
        with:
          repository: 'mars-office/${{inputs.umbrellaChartName}}'
          ref: 'main'
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Set chart name variable
        run: |
            echo "CHART_NAME=${{ needs.helm_build_push.outputs.chartName }}" >> $GITHUB_ENV

      - name: Replace version for subchart
        run: |
            newver="${{ inputs.version }}" yq -i '(.dependencies[] | select (.name == strenv(CHART_NAME))).version = strenv(newver)' ./Chart.yaml

      - name: Registry Login
        id: login
        run: |
          echo ${{ secrets.GH_TOKEN }} | helm registry login ghcr.io --username ${{ github.repository_owner }} --password-stdin

      - name: Update Chart Dependencies
        run: helm dependency update
        id: update

      - name: Push changes to umbrella chart repo
        run: |
            git config user.name "GitHub Actions Bot"
            git config user.email "actions@github.com"
            git commit -m "Bumped version for subchart: $CHART_NAME to ${{ inputs.version }}" .
            git push origin main